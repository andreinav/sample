growth_accounting(file = 'growth_accounting.dta',
base_year = 1990, # base year
steady_state = 10, # number of years for the steady-state growth rate output
fixed_capital = 2, # number of years to take into account for the Gross fixed capital formation
delta = depreciation,
alpha = income_share)
source('source_function.R')
library(readstata13)
library(dplyr)
library(tidyr)
source('source_function.R')
library(readstata13)
library(dplyr)
library(tidyr)
source('source_function.R')
depreciation <- c(0.03, 0.06, 0.08)
income_share <- c(0.2, 0.3, 0.4)
growth_accounting(file = 'growth_accounting.dta',
base_year = 1990, # base year
steady_state = 10, # number of years for the steady-state growth rate output
fixed_capital = 2, # number of years to take into account for the Gross fixed capital formation
delta = depreciation,
alpha = income_share)
depreciation <- c(0.03, 0.06, 0.08, 0.1, 0.2)
income_share <- c(0.2, 0.3, 0.4)
growth_accounting(file = 'growth_accounting.dta',
base_year = 1995, # base year
steady_state = 5, # number of years for the steady-state growth rate output
fixed_capital = 2, # number of years to take into account for the Gross fixed capital formation
delta = depreciation,
alpha = income_share)
source('source_function.R')
depreciation <- c(0.03, 0.06, 0.08)
income_share <- c(0.2, 0.3, 0.4)
growth_accounting(file = 'growth_accounting.dta',
base_year = 1990, # base year
steady_state = 10, # number of years for the steady-state growth rate output
fixed_capital = 2, # number of years to take into account for the Gross fixed capital formation
delta = depreciation,
alpha = income_share)
delta <- c(0.03, 0.06, 0.08)
alpha <- c(0.2, 0.3, 0.4)
df <-
read.dta13('growth_accounting.dta') %>%
filter(year >= 1990)
growth_rates <-
df %>%
group_by(countryname) %>%
arrange(year) %>%
slice(1:10) %>%
ungroup() %>%
mutate(lgfk = log(gfk)) %>%
mutate(dgfk = lgfk - lag(lgfk)) %>%
group_by(countryname) %>%
summarize(g = mean(dgfk, na.rm = TRUE))
df <-
df %>%
left_join(growth_rates, by = 'countryname') %>%
arrange(countryname, year)
#### Calculate I
df$I <- rep(0, nrow(df))
for(i in 1:nrow(df)){
if(df$year[i] == 1990){
df$I[i] <- mean(df$gfk[i:(i + 2 - 1)], na.rm = TRUE)
#df$I[i] <- (df$gfk[i] + df$gfk[i + 1]) / 2
}
else{
df$I[i] <- df$gfk[i]
}
}
###### Create combinations for delta
ls <- list()
for(i in 1:length(delta)){
temp <- df
temp$delta <- delta[i]
ls[[i]] <- temp
}
df <- bind_rows(ls)
View(df)
df$K <- rep(0, nrow(df))
for(i in 1:nrow(df)){
if(df$year[i] == 1990){
df$K[i] <- df$I[i] * (df$g[i] + delta)
}
else{
df$K[i] <- df$K[i - 1] * (1 - delta) + df$I[i]
}
}
?meanm
?mean
x <-
df %>%
group_by(delta) %>%
summarise(mean(K, na.rm = TRUE))
View(x)
delta <- c(0.03, 0.06, 0.08)
alpha <- c(0.2, 0.3, 0.4)
df <-
read.dta13('growth_accounting.dta') %>%
filter(year >= 1990)
growth_rates <-
df %>%
group_by(countryname) %>%
arrange(year) %>%
slice(1:10) %>%
ungroup() %>%
mutate(lgfk = log(gfk)) %>%
mutate(dgfk = lgfk - lag(lgfk)) %>%
group_by(countryname) %>%
summarize(g = mean(dgfk, na.rm = TRUE))
df <-
df %>%
left_join(growth_rates, by = 'countryname') %>%
arrange(countryname, year)
#### Calculate I
df$I <- rep(0, nrow(df))
for(i in 1:nrow(df)){
if(df$year[i] == 1990){
df$I[i] <- mean(df$gfk[i:(i + 2 - 1)], na.rm = TRUE)
#df$I[i] <- (df$gfk[i] + df$gfk[i + 1]) / 2
}
else{
df$I[i] <- df$gfk[i]
}
}
###### Create combinations for delta
ls <- list()
for(i in 1:length(delta)){
temp <- df
temp$delta <- delta[i]
ls[[i]] <- temp
}
df <- bind_rows(ls)
df$K <- rep(0, nrow(df))
df$K <- rep(0, nrow(df))
for(i in 1:nrow(df)){
if(df$year[i] == 1990){
print(1)
#df$K[i] <- df$I[i] * (df$g[i] + delta)
}
else{
print(2)
#df$K[i] <- df$K[i - 1] * (1 - delta) + df$I[i]
}
}
delta <- c(0.03, 0.06, 0.08)
alpha <- c(0.2, 0.3, 0.4)
df <-
read.dta13('growth_accounting.dta') %>%
filter(year >= 1990)
growth_rates <-
df %>%
group_by(countryname) %>%
arrange(year) %>%
slice(1:10) %>%
ungroup() %>%
mutate(lgfk = log(gfk)) %>%
mutate(dgfk = lgfk - lag(lgfk)) %>%
group_by(countryname) %>%
summarize(g = mean(dgfk, na.rm = TRUE))
df <-
df %>%
left_join(growth_rates, by = 'countryname') %>%
arrange(countryname, year)
#### Calculate I
df$I <- rep(0, nrow(df))
for(i in 1:nrow(df)){
if(df$year[i] == 1990){
df$I[i] <- mean(df$gfk[i:(i + 2 - 1)], na.rm = TRUE)
#df$I[i] <- (df$gfk[i] + df$gfk[i + 1]) / 2
}
else{
df$I[i] <- df$gfk[i]
}
}
###### Create combinations for delta
ls <- list()
for(i in 1:length(delta)){
temp <- df
temp$delta <- delta[i]
ls[[i]] <- temp
}
df <- bind_rows(ls)
###### Calculate K
df <-
df %>%
filter(countryname == 'Argentina')
df$K <- rep(0, nrow(df))
for(i in 1:nrow(df)){
if(df$year[i] == 1990){
print(1)
df$K[i] <- df$I[i] * (df$g[i] + delta)
}
else{
print(2)
df$K[i] <- df$K[i - 1] * (1 - delta) + df$I[i]
}
}
warnings()
source('source_function.R')
depreciation <- c(0.03, 0.06, 0.08)
income_share <- c(0.2, 0.3, 0.4)
growth_accounting(file = 'growth_accounting.dta',
base_year = 1990, # base year
steady_state = 10, # number of years for the steady-state growth rate output
fixed_capital = 2, # number of years to take into account for the Gross fixed capital formation
delta = depreciation,
alpha = income_share)
delta <- c(0.03, 0.06, 0.08)
alpha <- c(0.2, 0.3, 0.4)
df <-
read.dta13('growth_accounting.dta') %>%
filter(year >= 1990)
growth_rates <-
df %>%
group_by(countryname) %>%
arrange(year) %>%
slice(1:10) %>%
ungroup() %>%
mutate(lgfk = log(gfk)) %>%
mutate(dgfk = lgfk - lag(lgfk)) %>%
group_by(countryname) %>%
summarize(g = mean(dgfk, na.rm = TRUE))
df <-
df %>%
left_join(growth_rates, by = 'countryname') %>%
arrange(countryname, year)
#### Calculate I
df$I <- rep(0, nrow(df))
for(i in 1:nrow(df)){
if(df$year[i] == 1990){
df$I[i] <- mean(df$gfk[i:(i + 2 - 1)], na.rm = TRUE)
#df$I[i] <- (df$gfk[i] + df$gfk[i + 1]) / 2
}
else{
df$I[i] <- df$gfk[i]
}
}
###### Create combinations for delta
ls <- list()
for(i in 1:length(delta)){
temp <- df
temp$delta <- delta[i]
ls[[i]] <- temp
}
df <- bind_rows(ls)
###### Calculate K
df <-
df %>%
filter(countryname == 'Argentina')
df$K <- rep(0, nrow(df))
for(i in 1:nrow(df)){
if(df$year[i] == 1990){
print(1)
df$K[i] <- df$I[i] * (df$g[i] + delta)
}
else{
print(2)
df$K[i] <- df$K[i - 1] * (1 - delta) + df$I[i]
}
}
delta <- c(0.03, 0.06, 0.08)
alpha <- c(0.2, 0.3, 0.4)
df <-
read.dta13('growth_accounting.dta') %>%
filter(year >= 1990)
growth_rates <-
df %>%
group_by(countryname) %>%
arrange(year) %>%
slice(1:10) %>%
ungroup() %>%
mutate(lgfk = log(gfk)) %>%
mutate(dgfk = lgfk - lag(lgfk)) %>%
group_by(countryname) %>%
summarize(g = mean(dgfk, na.rm = TRUE))
df <-
df %>%
left_join(growth_rates, by = 'countryname') %>%
arrange(countryname, year)
#### Calculate I
df$I <- rep(0, nrow(df))
for(i in 1:nrow(df)){
if(df$year[i] == 1990){
df$I[i] <- mean(df$gfk[i:(i + 2 - 1)], na.rm = TRUE)
#df$I[i] <- (df$gfk[i] + df$gfk[i + 1]) / 2
}
else{
df$I[i] <- df$gfk[i]
}
}
###### Create combinations for delta
ls <- list()
for(i in 1:length(delta)){
temp <- df
temp$delta <- delta[i]
ls[[i]] <- temp
}
df <- bind_rows(ls)
###### Calculate K
df <-
df %>%
filter(countryname == 'Argentina')
df$K <- rep(0, nrow(df))
for(i in 1:nrow(df)){
if(df$year[i] == 1990){
print(1)
df$K[i] <- df$I[i] * (df$g[i] + delta[i])
}
else{
print(2)
df$K[i] <- df$K[i - 1] * (1 - delta) + df$I[i]
}
}
delta <- c(0.03, 0.06, 0.08)
alpha <- c(0.2, 0.3, 0.4)
df <-
read.dta13('growth_accounting.dta') %>%
filter(year >= 1990)
growth_rates <-
df %>%
group_by(countryname) %>%
arrange(year) %>%
slice(1:10) %>%
ungroup() %>%
mutate(lgfk = log(gfk)) %>%
mutate(dgfk = lgfk - lag(lgfk)) %>%
group_by(countryname) %>%
summarize(g = mean(dgfk, na.rm = TRUE))
df <-
df %>%
left_join(growth_rates, by = 'countryname') %>%
arrange(countryname, year)
#### Calculate I
df$I <- rep(0, nrow(df))
for(i in 1:nrow(df)){
if(df$year[i] == 1990){
df$I[i] <- mean(df$gfk[i:(i + 2 - 1)], na.rm = TRUE)
#df$I[i] <- (df$gfk[i] + df$gfk[i + 1]) / 2
}
else{
df$I[i] <- df$gfk[i]
}
}
###### Create combinations for delta
ls <- list()
for(i in 1:length(delta)){
temp <- df
temp$delta <- delta[i]
ls[[i]] <- temp
}
df <- bind_rows(ls)
###### Calculate K
df$K <- rep(0, nrow(df))
for(i in 1:nrow(df)){
if(df$year[i] == 1990){
print(1)
df$K[i] <- df$I[i] * (df$g[i] + delta[i])
}
else{
print(2)
df$K[i] <- df$K[i - 1] * (1 - delta[i]) + df$I[i]
}
}
delta <- c(0.03, 0.06, 0.08)
alpha <- c(0.2, 0.3, 0.4)
df <-
read.dta13('growth_accounting.dta') %>%
filter(year >= 1990)
growth_rates <-
df %>%
group_by(countryname) %>%
arrange(year) %>%
slice(1:10) %>%
ungroup() %>%
mutate(lgfk = log(gfk)) %>%
mutate(dgfk = lgfk - lag(lgfk)) %>%
group_by(countryname) %>%
summarize(g = mean(dgfk, na.rm = TRUE))
df <-
df %>%
left_join(growth_rates, by = 'countryname') %>%
arrange(countryname, year)
#### Calculate I
df$I <- rep(0, nrow(df))
for(i in 1:nrow(df)){
if(df$year[i] == 1990){
df$I[i] <- mean(df$gfk[i:(i + 2 - 1)], na.rm = TRUE)
#df$I[i] <- (df$gfk[i] + df$gfk[i + 1]) / 2
}
else{
df$I[i] <- df$gfk[i]
}
}
###### Create combinations for delta
ls <- list()
for(i in 1:length(delta)){
temp <- df
temp$delta <- delta[i]
ls[[i]] <- temp
}
df <- bind_rows(ls)
###### Calculate K
df$K <- rep(0, nrow(df))
for(i in 1:nrow(df)){
if(df$year[i] == 1990){
df$K[i] <- df$I[i] * (df$g[i] + delta[i])
}
else{
df$K[i] <- df$K[i - 1] * (1 - delta[i]) + df$I[i]
}
}
library(readstata13)
library(dplyr)
library(tidyr)
delta <- c(0.03, 0.06, 0.08)
alpha <- c(0.2, 0.3, 0.4)
df <-
read.dta13('growth_accounting.dta') %>%
filter(year >= 1990)
growth_rates <-
df %>%
group_by(countryname) %>%
arrange(year) %>%
slice(1:10) %>%
ungroup() %>%
mutate(lgfk = log(gfk)) %>%
mutate(dgfk = lgfk - lag(lgfk)) %>%
group_by(countryname) %>%
summarize(g = mean(dgfk, na.rm = TRUE))
df <-
df %>%
left_join(growth_rates, by = 'countryname') %>%
arrange(countryname, year)
#### Calculate I
df$I <- rep(0, nrow(df))
for(i in 1:nrow(df)){
if(df$year[i] == 1990){
df$I[i] <- mean(df$gfk[i:(i + 2 - 1)], na.rm = TRUE)
#df$I[i] <- (df$gfk[i] + df$gfk[i + 1]) / 2
}
else{
df$I[i] <- df$gfk[i]
}
}
###### Create combinations for delta
ls <- list()
for(i in 1:length(delta)){
temp <- df
temp$delta <- delta[i]
ls[[i]] <- temp
}
df <- bind_rows(ls)
###### Calculate K
df$K <- rep(0, nrow(df))
df$K[5 - 1]
source('source_function.R')
depreciation <- c(0.03, 0.06, 0.08)
income_share <- c(0.2, 0.3, 0.4)
growth_accounting(file = 'growth_accounting.dta',
base_year = 1990, # base year
steady_state = 10, # number of years for the steady-state growth rate output
fixed_capital = 2, # number of years to take into account for the Gross fixed capital formation
delta = depreciation,
alpha = income_share)
source('source_function.R')
growth_accounting(file = 'growth_accounting.dta',
base_year = 1990,   # base year
steady_state = 10,    # number of years for the steady-state growth rate output
fixed_capital = 2,    # number of years to take into account for the Gross fixed capital formation
depreciation = c(0.03, 0.06, 0.08),    # this sets the multiple values of depreciation rate of capital (delta)
income_share = c(0.2, 0.3, 0.4),    # this sets the multiple values of income of capital (alpha)
output_name = 'growth_accounting_resulst2.csv')    # this sets the name of the output csv file - good for multiple runs
source('source_function.R')
growth_accounting(file = 'growth_accounting.dta',
base_year = 1990,   # base year
steady_state = 10,    # number of years for the steady-state growth rate output
fixed_capital = 2,    # number of years to take into account for the Gross fixed capital formation
depreciation = c(0.03, 0.06, 0.08),    # this sets the multiple values of depreciation rate of capital (delta)
income_share = c(0.2, 0.3, 0.4),    # this sets the multiple values of income of capital (alpha)
output_name = 'growth_accounting_resulst2.csv')    # this sets the name of the output csv file - good for multiple runs
source('source_function.R')
growth_accounting(file = 'growth_accounting.dta',
# base year
base_year = 1990,
# number of years for the steady-state growth rate output
steady_state = 10,
# number of years to take into account for the Gross fixed capital formation
fixed_capital = 2,
# this sets the multiple values of depreciation rate of capital (delta) - can be more or less than 3
depreciation = c(0.03, 0.06, 0.08),
# this sets the multiple values of income of capital (alpha) - can be more or less than 3
income_share = c(0.2, 0.3, 0.4),
# this sets the name of the output csv file - good for multiple runs
output_name = 'growth_accounting_results.csv')
library(readstata13)
library(dplyr)
library(tidyr)
source('source_function.R')
growth_accounting(file = 'growth_accounting.dta',
# base year
base_year = 1990,
# number of years for the steady-state growth rate output
steady_state = 10,
# number of years to take into account for the Gross fixed capital formation
fixed_capital = 2,
# this sets the multiple values of depreciation rate of capital (delta) - can be more or less than 3
depreciation = c(0.03, 0.06, 0.08),
# this sets the multiple values of income of capital (alpha) - can be more or less than 3
income_share = c(0.2, 0.3, 0.4),
# this sets the name of the output csv file - good for multiple runs
output_name = 'growth_accounting_results.csv')
